{"version":3,"file":"express.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/utils/index.ts","../../src/utils/logger.ts","../../src/utils/express.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * Check if the current environment is development\n * @returns boolean\n */\nconst isDev = (): boolean => {\n  return ['test', 'staging', 'production'].indexOf(process.env.NODE_ENV as string) === -1;\n};\n\nconst isTest = (): boolean => {\n  return process.env.NODE_ENV === 'test';\n};\n\nconst isStaging = (): boolean => {\n  return process.env.NODE_ENV === 'staging';\n};\n\nconst isProduction = (): boolean => {\n  return process.env.NODE_ENV === 'production';\n};\n\nexport { isDev, isTest, isStaging, isProduction };\n","const log = (...args: any) => console.log(`LOG:${Date.now()}`, ...args);\nconst info = (...args: any) => console.info(`INF:${Date.now()}`, ...args);\nconst error = (...args: any) => console.error(`ERR:${Date.now()}`, ...args);\n\nexport default { log, info, error };\n","/* tslint:disable */\n\nimport { Request, Response, NextFunction, RequestHandler } from 'express';\nimport { NOT_FOUND, BAD_REQUEST } from 'http-status-codes';\n\nimport { HttpError } from './error';\nimport errorHandler from './error-handler';\nimport { isValidObjectId, Types } from 'mongoose';\n\n// ---------------------------------------------------\n// ----------------------Helpers----------------------\n// ---------------------------------------------------\n\ninterface OriginalQuery {\n  readonly select?: string;\n  readonly populate?: string;\n}\ninterface Query {\n  readonly select: string[];\n  readonly populate: string[];\n}\ninterface OriginalListQuery {\n  readonly sort?: string;\n  readonly direction?: string;\n  readonly skip?: number;\n  readonly limit?: number;\n  readonly select?: string;\n  readonly populate?: string;\n  readonly search?: string;\n  readonly q?: string;\n  readonly filter?: string;\n  readonly [key: string]: any; // tslint:disable-line: no-mixed-interface\n}\ninterface ListQuery {\n  readonly query: {\n    readonly [key: string]: string | string[] | any;\n  };\n  readonly select: string[];\n  readonly populate: string[];\n  readonly sort: string;\n  readonly skip: number;\n  readonly limit: number;\n}\n\nconst DEFAULT_QUERY: Query = {\n  select: [],\n  populate: [],\n};\nconst DEFAULT_LIST_QUERY: ListQuery = {\n  query: {},\n  select: [],\n  populate: [],\n  sort: 'createdAt',\n  skip: 0,\n  limit: 25,\n};\n\nconst parseSearchQuery = (searchBy: string, keyword: string) => {\n  if (!searchBy.trim() || !keyword.trim()) {\n    return {};\n  }\n\n  const query = searchBy\n    .trim()\n    .split(',')\n    .reduce(\n      (prev: ReadonlyArray<any>, key) =>\n        !key.trim()\n          ? prev\n          : prev.concat({\n              [key.trim()]: new RegExp(keyword.trim(), 'gi'),\n            }),\n      [],\n    );\n\n  if (query.length === 0) {\n    return {};\n  }\n\n  return query.length === 1 ? query[0] : { $or: query };\n};\n\nconst parseFilterQuery = (filterBy: string, values: { readonly [key: string]: string }) => {\n  if (!filterBy.trim()) {\n    return {};\n  }\n\n  return filterBy\n    .trim()\n    .split(',')\n    .reduce((prev: { readonly [key: string]: any }, key) => {\n      if (!key || !key.trim()) {\n        return prev;\n      }\n\n      if (!values[key.trim()].trim()) {\n        return {\n          ...prev,\n          $or: [...(prev['$or'] || []), { [key.trim()]: { $exists: false } }, { [key.trim()]: null }],\n        };\n      }\n\n      const valuesArray = values[key.trim()].trim().split(',');\n      let singleValue: any = valuesArray[0];\n\n      if (isValidObjectId(singleValue)) {\n        singleValue = Types.ObjectId(singleValue);\n      }\n\n      return {\n        ...prev,\n        [key.trim()]: valuesArray.length === 1 ? singleValue : { $in: valuesArray.map(v => v.trim()) },\n      };\n    }, {}) as any;\n};\n\nconst parseSelect = (select: string) => {\n  return select.split(',').filter(item => !!item);\n};\n\nconst parsePopulate = (populate: string) => {\n  return populate.split(',').filter(item => !!item);\n};\n\nconst parseSort = (sort: string, direction: string) => {\n  return direction === 'desc' ? `-${sort.trim()}` : sort.trim();\n};\n\nconst parseQuery = ({ select = '', populate = '' }: OriginalQuery): Query => ({\n  select: parseSelect(select),\n  populate: parsePopulate(populate),\n});\n\nconst parseListQuery = ({\n  search = '',\n  q = '',\n  filter = '',\n  select = '',\n  populate = '',\n  sort = 'createdAt',\n  direction = 'asc',\n  skip = 0,\n  limit = 25,\n  ...filterValues\n}: OriginalListQuery): ListQuery => {\n  const { $or: searchOr, ...searchQuery } = parseSearchQuery(search, q);\n  const { $or: filterOr, ...filterQuery } = parseFilterQuery(filter, filterValues);\n\n  const $and = []; // tslint:disable-line: readonly-array\n  if (searchOr) {\n    $and.push({ $or: searchOr });\n  }\n  if (filterOr) {\n    $and.push({ $or: filterOr });\n  }\n\n  return {\n    query: {\n      ...searchQuery,\n      ...filterQuery,\n      ...($and.length > 0 ? { $and } : {}),\n    },\n    select: parseSelect(select),\n    populate: parsePopulate(populate),\n    sort: parseSort(sort, direction),\n    skip: +skip,\n    limit: +limit,\n  };\n};\n\n// ---------------------------------------------------\n// -----------------Express Middleware----------------\n// ---------------------------------------------------\n\n/**\n * Parse request's query to the mongoose compatible query\n * @param req Express Request object\n * @param _ Express Response object\n * @param next Express Next function\n */\nconst parseQueryMiddleware = (req: Request, _: Response, next: NextFunction) => {\n  try {\n    const myQuery = parseQuery(req.query);\n    Object.assign(req, { myQuery }); // tslint:disable-line: no-object-mutation\n\n    next();\n  } catch (err) {\n    next(new HttpError(BAD_REQUEST, err));\n  }\n};\n\n/**\n * Parse request's query to the mongoose compatible query\n * @param req Express Request object\n * @param _ Express Response object\n * @param next Express Next function\n */\nconst parseListQueryMiddleware = (req: Request, _: Response, next: NextFunction) => {\n  try {\n    const myQuery = parseListQuery(req.query);\n    Object.assign(req, { myQuery }); // tslint:disable-line: no-object-mutation\n\n    next();\n  } catch (err) {\n    next(new HttpError(BAD_REQUEST, err));\n  }\n};\n\n/**\n * An Express RequestHandler wrapper that throws error if invalid,\n * otherwise parses the request's body to the desired one\n * @param validate Validation function\n */\nconst validateBody = (validate: Function): RequestHandler => {\n  return (req: Request, _: Response, next: NextFunction) => {\n    try {\n      const myBody = validate(req.body);\n      Object.assign(req, { myBody }); // tslint:disable-line: no-object-mutation\n\n      next();\n    } catch (err) {\n      next(new HttpError(BAD_REQUEST, err));\n    }\n  };\n};\n\n/**\n * An Express RequestHandler that handles the 404 Not Found error\n * @param _ Express Request object\n * @param __ Express Response object\n * @param next Express Next function\n */\nconst handleNotFound = (_: Request, __: Response, next: NextFunction) => {\n  next(new HttpError(NOT_FOUND, 'Resource not found'));\n};\n\n/**\n * An Express RequestHandler that responses error info to the client\n * @param err Http Error object\n * @param _ Express Request object\n * @param res Express Response object\n * @param __ Express Next function\n */\nconst handleErrors = (err: HttpError, _: Request, res: Response, __: NextFunction) => {\n  errorHandler.handle(err);\n\n  res.status(err.code).send(err);\n};\n\nexport {\n  OriginalQuery,\n  Query,\n  OriginalListQuery,\n  ListQuery,\n  DEFAULT_QUERY,\n  DEFAULT_LIST_QUERY,\n  parseQuery,\n  parseListQuery,\n  parseQueryMiddleware,\n  parseListQueryMiddleware,\n  validateBody,\n  handleNotFound,\n  handleErrors,\n};\n"],"names":[],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}